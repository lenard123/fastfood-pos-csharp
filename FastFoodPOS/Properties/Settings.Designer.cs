//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FastFoodPOS.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.ConnectionString)]
        [global::System.Configuration.DefaultSettingValueAttribute("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=|DataDirectory|\\FastFoodDatabase.ac" +
            "cdb;Persist Security Info=True")]
        public string FastFoodDatabaseConnectionString {
            get {
                return ((string)(this["FastFoodDatabaseConnectionString"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\nCREATE TABLE IF NOT EXISTS `orders` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r" +
            "\n  `product_id` int(11) NOT NULL,\r\n  `transaction_id` varchar(256) NOT NULL,\r\n  " +
            "`quantity` int(11) NOT NULL,\r\n  `price` decimal(10,2) NOT NULL,\r\n  PRIMARY KEY(i" +
            "d)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\r\n\r\n\r\nCRE" +
            "ATE TABLE IF NOT EXISTS `products` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n " +
            " `name` varchar(256) NOT NULL,\r\n  `category` varchar(256) NOT NULL,\r\n  `price` d" +
            "ecimal(10,2) NOT NULL,\r\n  `is_available` tinyint(1) NOT NULL,\r\n  `image` varchar" +
            "(256) NOT NULL,\r\n  `is_deleted` tinyint(1) NOT NULL DEFAULT \'0\',\r\n  PRIMARY KEY(" +
            "id)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\r\n\r\n\r\nCR" +
            "EATE TABLE IF NOT EXISTS `transactions` (\r\n  `id` varchar(256) NOT NULL,\r\n  `use" +
            "r_id` int(11) NOT NULL,\r\n  `date_created` datetime NOT NULL DEFAULT CURRENT_TIME" +
            "STAMP,\r\n  `cash` decimal(10,2) NOT NULL,\r\n  PRIMARY KEY(id)\r\n) ENGINE=InnoDB DEF" +
            "AULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\r\n\r\n\r\nCREATE TABLE IF NOT EXISTS" +
            " `users` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `fullname` varchar(256) N" +
            "OT NULL,\r\n  `email` varchar(256) NOT NULL,\r\n  `role` varchar(256) NOT NULL,\r\n  `" +
            "password` varchar(256) NOT NULL,\r\n  `image` varchar(256) NOT NULL,\r\n  `is_delete" +
            "d` tinyint(1) NOT NULL DEFAULT \'0\',\r\n  PRIMARY KEY(id)\r\n) ENGINE=InnoDB DEFAULT " +
            "CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\r\n\r\n\r\nCREATE OR REPLACE VIEW `OrderTo" +
            "tal` AS\r\nSELECT transaction_id, SUM(price*quantity) AS total, Sum(quantity) AS o" +
            "rders\r\nFROM orders\r\nGROUP BY transaction_id;\r\n\r\n\r\nCREATE OR REPLACE VIEW `Transa" +
            "ctionsView` AS\r\nSELECT transactions.*, OrderTotal.total, OrderTotal.orders\r\nFROM" +
            " transactions INNER JOIN OrderTotal ON transactions.id=OrderTotal.transaction_id" +
            ";\r\n\r\n\r\nCREATE OR REPLACE VIEW `SalesView` AS\r\nSELECT Sum(TransactionsView.total)" +
            " AS Sale, date_created AS day, Sum(TransactionsView.orders) AS total_order, Coun" +
            "t(TransactionsView.id) AS total_customer\r\nFROM TransactionsView\r\nGROUP BY day\r\nO" +
            "RDER BY day;\r\n\r\n")]
        public string MySQLTables {
            get {
                return ((string)(this["MySQLTables"]));
            }
        }
    }
}
